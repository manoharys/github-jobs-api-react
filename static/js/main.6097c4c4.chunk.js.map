{"version":3,"sources":["useFetchJobs.js","component/Job.jsx","App.js","index.js"],"names":["ACTIONS","reducer","state","action","type","jobs","loading","payLoad","error","useFetchJobs","params","page","useReducer","dispatch","useEffect","cancelToken","axios","CancelToken","source","console","log","get","token","markdown","then","res","data","catch","e","isCancel","cancel","Job","job","useState","open","setOpen","Card","className","Body","style","fontSize","Title","title","company","Subtitle","Date","created_at","toLocaleDateString","Badge","variant","location","wordBreak","how_to_apply","height","alt","src","company_logo","Text","Button","onClick","prevOpen","Collapse","in","description","App","background","fontWeight","color","Container","map","id","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.6097c4c4.chunk.js","sourcesContent":["import { useReducer, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst ACTIONS = {\r\n  MAKE_REQUEST: \"makeRequest\",\r\n  GET_REQUEST: \"getRequest\",\r\n  ERROR: \"error\",\r\n};\r\n\r\nconst BASE_URL = \"https://cors-anywhere.herokuapp.com/https://jobs.github.com/positions.json\";\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ACTIONS.MAKE_REQUEST:\r\n      return {\r\n        jobs: [],\r\n        loading: true,\r\n      };\r\n    case ACTIONS.GET_REQUEST:\r\n      return {\r\n        ...state,\r\n        jobs: action.payLoad.jobs,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n\r\n    case ACTIONS.ERROR:\r\n      return {\r\n        jobs: [],\r\n        loading: false,\r\n        error: action.payLoad.error,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useFetchJobs = (params, page) => {\r\n  const [state, dispatch] = useReducer(reducer, { jobs: [], loading: true });\r\n\r\n  useEffect(() => {\r\n    const cancelToken = axios.CancelToken.source();\r\n    console.log(\"HYY\");\r\n    dispatch({ type: ACTIONS.MAKE_REQUEST });\r\n    axios\r\n      .get(BASE_URL, {\r\n        cancelToken: cancelToken.token,\r\n        params: { markdown: true, page: page, ...params },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        dispatch({ type: ACTIONS.GET_REQUEST, payLoad: { jobs: res.data } });\r\n      })\r\n      .catch((e) => {\r\n        if (axios.isCancel(e)) return;\r\n        dispatch({ type: ACTIONS.ERROR, payLoad: { error: e } });\r\n      });\r\n\r\n    return () => {\r\n      cancelToken.cancel();\r\n    };\r\n  }, []);\r\n  return state;\r\n};\r\n\r\nexport default useFetchJobs;\r\n","import React, { useState } from \"react\";\r\nimport { Card, Badge, Button, Collapse } from \"react-bootstrap\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction Job({ job }) {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  return (\r\n    <Card className=\"mb-3\">\r\n      <Card.Body style={{ fontSize: \"15px\" }}>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div>\r\n            <Card.Title>\r\n              {job.title} -{\" \"}\r\n              <span className=\"text-muted font-weight-light\">\r\n                {job.company}\r\n              </span>\r\n            </Card.Title>\r\n            <Card.Subtitle\r\n              className=\"text-muted mb-2\"\r\n              style={{ fontSize: \"11px\" }}\r\n            >\r\n              {new Date(job.created_at).toLocaleDateString()}\r\n            </Card.Subtitle>\r\n            <Badge variant=\"secondary\" className=\"mr-2\">\r\n              {job.type}\r\n            </Badge>\r\n            <Badge variant=\"secondary\">{job.location}</Badge>\r\n            <div style={{ wordBreak: \"break-all\" }}>\r\n              <ReactMarkdown source={job.how_to_apply} />\r\n            </div>\r\n          </div>\r\n          <img\r\n            className=\"d-none d-md-block\"\r\n            height=\"50\"\r\n            alt={job.company}\r\n            src={job.company_logo}\r\n          />\r\n        </div>\r\n        <Card.Text>\r\n          <Button\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n            variant=\"primary\"\r\n          >\r\n            {open ? \"Hide Details\" : \"View Details\"}\r\n          </Button>\r\n        </Card.Text>\r\n        <Collapse in={open}>\r\n          <div className=\"mt-4\">\r\n            <ReactMarkdown source={job.description} />\r\n          </div>\r\n        </Collapse>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n}\r\nexport default Job;\r\n","import React, { useState } from \"react\";\r\nimport useFetchJobs from \"./useFetchJobs\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Job from \"./component/Job\";\r\n\r\nfunction App() {\r\n  \r\n\r\n  const { jobs, loading, error } = useFetchJobs();\r\n  return (\r\n    <div>\r\n      <center className=\"m-0\">\r\n        <h1 className=\"mb-5\" style={{ background: \"#2B7FC3\" }}>\r\n          <span\r\n            style={{ fontWeight: \"bold\", fontSize: \"35px\", color: \"white\" }}\r\n          >\r\n            GitHub\r\n          </span>{\" \"}\r\n          Jobs\r\n        </h1>\r\n      </center>\r\n\r\n      <Container>\r\n        {loading && <h1>Loading...</h1>}\r\n        {error && <h1>Error. Try refresing it..</h1>}\r\n        <h1>\r\n          {jobs.map((job) => (\r\n            <Job job={job} key={job.id} />\r\n          ))}\r\n        </h1>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from \"./App\";\r\n\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}